services:
  monitor:
    build: .
    volumes: 
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '.:/usr/src/app'
    # environment:
    #   DYNAMODB_TABLE: my_table
    #   AWS_ACCESS_KEY_ID: asdf
    #   AWS_SECRET_ACCESS_KEY: asdf
    env_file: .env
    network_mode: host
    depends_on: 
      good:
        condition: service_started
      bad:
        condition: service_started

  good:
    build:
      context: test
    command: bundle exec ruby good.rb
    volumes: 
      - './test:/usr/src/app'
    labels:
      com.github.ianneub.docker-monitor.shutdown_over_mem_limit: 'yes'
      com.amazonaws.ecs.task-arn: 'asdf-good'
      com.amazonaws.ecs.cluster: testing
    deploy:
      resources:
        reservations:
          memory: 128M

  bad:
    build:
      context: test
    command: bundle exec ruby bad.rb
    volumes: 
      - './test:/usr/src/app'
    labels:
      com.github.ianneub.docker-monitor.shutdown_over_mem_limit: 'yes'
      com.amazonaws.ecs.task-arn: 'arn:aws:ecs:us-east-1:123456789123:task/production/12345678901234567890123456789012'
      com.amazonaws.ecs.cluster: production
    ports:
      - 30123:3000
    deploy:
      resources:
        reservations:
          memory: 8M
